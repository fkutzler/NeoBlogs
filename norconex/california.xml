<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<!-- 
   Copyright 2010-2017 Norconex Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<!-- This configuration shows the minimum required and basic recommendations
     to run a crawler.  
     -->
<httpcollector id="Neo4j Config HTTP Collector">

  <!-- Decide where to store generated files. -->
  <progressDir>./neo4j-output/minimum/progress</progressDir>
  <logsDir>./neo4j-output/minimum/logs</logsDir>

  <crawlers>
    <crawler id="california_regions_and_wineries">
    <userAgent>Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36</userAgent>
  
      <startURLs stayOnDomain="true" stayOnPort="true" stayOnProtocol="true">  
        <url>https://discovercaliforniawines.com/wine-map-winery-directory/</url>    
        <url>https://discovercaliforniawines.com/discover-california/</url>
      </startURLs>

      <!-- === Recommendations: ============================================ -->

      <!-- Specify a crawler default directory where to generate files. -->
      <workDir>./neo4j-output/minimum</workDir>

      <!-- Put a maximum depth to avoid infinite crawling (e.g. calendars). -->
      <maxDepth>5</maxDepth>

      <!-- We know we don't want to crawl the entire site, so ignore sitemap. -->
      <sitemapResolverFactory ignore="true" />

      <recrawlableResolver 
         class="com.norconex.collector.http.recrawl.impl.GenericRecrawlableResolver">     
        <minFrequency applyTo="reference" value="never">.*</minFrequency>
	    </recrawlableResolver>

  	  <canonicalLinkDetector 
            class="com.norconex.collector.http.url.impl.GenericCanonicalLinkDetector"
            ignore="true">
    	</canonicalLinkDetector>

      <robotsTxt ignore="true" />
      <robotsMeta ignore="true" />
      <canonicalLinkDetector ignore="true"  />
  	  <stopOnExceptions>
          <exception>org.neo4j.driver.v1.exceptions.AuthenticationException</exception>
          <exception>org.neo4j.driver.v1.exceptions.ClientException</exception>
      </stopOnExceptions>
      <!-- Be as nice as you can to sites you crawl. -->
      <delay default="500" />

      <linkExtractors>
            <extractor class="com.norconex.collector.http.url.impl.GenericLinkExtractor">
                  <!-- below : for having regions and sub regions -->
                  <extractSelector>#page-menu-bar</extractSelector>  
                  <!-- below : for having wineries -->  
                  <extractSelector>#posts_countable_list</extractSelector> 

            </extractor>
      </linkExtractors>

      <referenceFilters>  
      
       <filter class="com.norconex.collector.core.filter.impl.RegexReferenceFilter"
          onMatch="include">
      https://discovercaliforniawines.com/discover-california/.*
        </filter>
        <filter class="com.norconex.collector.core.filter.impl.RegexReferenceFilter"
          onMatch="include">
      https://discovercaliforniawines.com/
        </filter>
        <filter class="com.norconex.collector.core.filter.impl.RegexReferenceFilter"
          onMatch="include">
      https://discovercaliforniawines.com/wineries/.+
        </filter>
        <filter class="com.norconex.collector.core.filter.impl.RegexReferenceFilter"
          onMatch="include">
      https://discovercaliforniawines.com/wine-map-winery-directory/.+
        </filter>
       
      
      </referenceFilters>


      <documentFilters>
        
        <filter class="com.norconex.collector.core.filter.impl.RegexReferenceFilter"
          onMatch="include">
      https://discovercaliforniawines.com/discover-california/.+
        </filter> 
       
        <filter class="com.norconex.collector.core.filter.impl.RegexReferenceFilter"
          onMatch="include">
      https://discovercaliforniawines.com/wineries/.+
        </filter>
         <filter class="com.norconex.collector.core.filter.impl.RegexReferenceFilter"
          onMatch="include">
      https://discovercaliforniawines.com/wine-map-winery-directory/.+
        </filter>
        
      </documentFilters>

      <!-- Document importing -->
      <importer>
        <preParseHandlers>
          
          <tagger class="com.norconex.importer.handler.tagger.impl.CopyTagger">
            <copy fromField="collector.referrer-link-text"   toField="value" overwrite="false" />
            <copy fromField="collector.referrer-link-text"   toField="valueId" overwrite="true" />
          </tagger>   

          <!-- below: extract winery Id from URL to pick data varietals and add them to current meta-data of the crawled winery document-->
          <tagger class="com.norconex.importer.handler.tagger.impl.ScriptTagger">
             <restrictTo caseSensitive="false" field="document.reference">
             https://discovercaliforniawines.com/wine-map-winery-directory/.+
            </restrictTo>
            <script><![CDATA[
                var wineId =  reference.substring(
                    reference.indexOf("=") + 1, 
                    reference.lastIndexOf("&")
                );
                metadata.addString('winery-id', wineId);
                
                // transformation text content to Html DOM
                var jsoup = org.jsoup.Jsoup.parse(content);
                var elems = jsoup.getElementsByAttributeValue("data-id", wineId);
                var elem = elems.first();
                if (elem != null){
                  var varietals = elem.parent().attr("data-varietals");
                  varietals= varietals.replace("[","");
                  varietals= varietals.replace("]","");
                  //varietals= varietals.replace(/,/g,"|");
                  var parts = varietals.split (","); 
                  for (i = 0 ; i < parts.length ; i++){
                    metadata.addString('varietals', parts[i]);
                  }                  
                }
                else metadata.addString('varietals', 'none'); 
      
            ]]></script>
        </tagger>       
         
      </preParseHandlers>
      <postParseHandlers>
        <tagger class="com.norconex.importer.handler.tagger.impl.ConstantTagger"
            onConflict="noop" >      
          <restrictTo caseSensitive="false" field="document.reference">
              https://discovercaliforniawines.com/discover-california/[\w-?]*/?{0,0}
          </restrictTo>
          <constant name="TYPE">CALIFORNIA_REGION</constant>
        </tagger>
        <tagger class="com.norconex.importer.handler.tagger.impl.ConstantTagger"
            onConflict="noop" >      
          <restrictTo caseSensitive="false" field="document.reference">
              https://discovercaliforniawines.com/discover-california/[\w-?]*/.*
          </restrictTo>
          <constant name="TYPE">CALIFORNIA_SUB_REGION</constant>
        </tagger>
          
        <tagger class="com.norconex.importer.handler.tagger.impl.ConstantTagger"
            onConflict="noop" >      
          <restrictTo caseSensitive="false" field="document.reference">
              https://discovercaliforniawines.com/wineries/.*
          </restrictTo>
          <constant name="TYPE">WINERY</constant>
        </tagger>
          
        <tagger class="com.norconex.importer.handler.tagger.impl.ConstantTagger"
            onConflict="noop" >      
          <restrictTo caseSensitive="false" field="document.reference">
              https://discovercaliforniawines.com/wine-map-winery-directory/.+
          </restrictTo>
          <constant name="TYPE">WINERY</constant>
        </tagger>
          
         
          
        <tagger class="com.norconex.importer.handler.tagger.impl.CharacterCaseTagger">       
          <characterCase fieldName="valueId"
                         type="lower" 
                         applyTo="value" />          
          
        </tagger>
        <tagger class="com.norconex.importer.handler.tagger.impl.ReplaceTagger">  
          <replace fromField="valueId" 
                   replaceAll="true">
              <fromValue>-en</fromValue>
              <toValue xml:space="preserve"> </toValue>
          </replace>
        </tagger>

        <tagger class="com.norconex.importer.handler.tagger.impl.ReplaceTagger">  
          <replace fromField="identity"
                    toField="parent" 
                   replaceAll="true">
              <fromValue>-en</fromValue>
              <toValue xml:space="preserve"> </toValue>
          </replace>
        </tagger>
           
        <tagger class="com.norconex.importer.handler.tagger.impl.ReplaceTagger">  
          <replace fromField="valueId" 
                   replaceAll="true">
              <fromValue xml:space="preserve"> de </fromValue>
              <toValue xml:space="preserve"> </toValue>
          </replace>
        </tagger>         
      </postParseHandlers>
    </importer> 

     
    <urlNormalizer class="com.norconex.collector.http.url.impl.GenericURLNormalizer">
      <normalizations>
          lowerCaseSchemeHost,
          removeDefaultPort, removeDotSegments, removeDuplicateSlashes,
          encodeNonURICharacters
      </normalizations>   
    </urlNormalizer>
   
      
      
      <!-- Decide what to do with your files by specifying a Committer. -->
    <committer class="com.norconex.committer.neo4j.Neo4jCommitter">
  		<uri>bolt://localhost:7687</uri>
  		<user>neo4j</user>
  		<password>root</password>
  		<authentType>BASIC</authentType>
      
  		<multiValuesJoiner>|</multiValuesJoiner>
  		
  		<!-- SPLITTED | ONE_NODE | NO_CONTENT -->
  		<nodeTopology>NO_CONTENT</nodeTopology>
  		<primaryLabel>CALIFORNIA</primaryLabel>

      <relationships>
        
        <!-- Below: linking regions to sub regions -->
        <relationship type="HAS_SUB_REGION" direction="OUTGOING" targetFindSyntax="MERGE" regexFilter="https://discovercaliforniawines.com/discover-california/[\\w-?]+/.+">         
         <sourcePropertyKey label="CALIFORNIA_REGION">collector.referenced-urls</sourcePropertyKey>
         <targetPropertyKey label="CALIFORNIA_SUB_REGION">identity</targetPropertyKey>
        </relationship>

        <!-- Below: to reach the varietals from the sub regions we have to pass through wineries -->
        <relationship type="HAS_WINERY" direction="OUTGOING" targetFindSyntax="MERGE" regexFilter="https://discovercaliforniawines.com/wineries/.+">         
         <sourcePropertyKey label="CALIFORNIA_SUB_REGION">collector.referenced-urls</sourcePropertyKey>
         <targetPropertyKey label="WINERY">identity</targetPropertyKey>
        </relationship>

        <!-- Below: Far Noth California region has no sub region -->
        <relationship type="HAS_WINERY" direction="OUTGOING" targetFindSyntax="MERGE" regexFilter="https://discovercaliforniawines.com/wineries/.+">         
         <sourcePropertyKey label="CALIFORNIA_REGION">collector.referenced-urls</sourcePropertyKey>
         <targetPropertyKey label="WINERY">identity</targetPropertyKey>
        </relationship>

        <!-- Below: Winery links have http redirections to targetted winery pages -->
        <relationship type="REDIRECT_TO" direction="INCOMING" targetFindSyntax="MATCH">         
         <sourcePropertyKey >collector.redirect-trail</sourcePropertyKey>
         <targetPropertyKey >identity</targetPropertyKey>
        </relationship>       

        <!-- Below: linking wineries to varietals -->
        <relationship type="FROM_WINERY" direction="INCOMING" targetFindSyntax="MATCH">         
         <sourcePropertyKey >varietals</sourcePropertyKey>
         <targetPropertyKey >varietal_id</targetPropertyKey>
        </relationship>
      </relationships>
     
      <additionalLabels>
        <sourceField keep="true">TYPE</sourceField>
      </additionalLabels>   

  		<sourceReferenceField keep="true">document.reference</sourceReferenceField>
      <targetReferenceField>identity</targetReferenceField>
  		<queueSize>5</queueSize>
    </committer>

  </crawler>
  </crawlers>
</httpcollector>
